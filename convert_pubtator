#!/bin/bash

FORCE_CONVERT=0
NUM_PARALLEL=1
STEP=10000000

# オプションの読み取り
while getopts fP: OPT
do
  case $OPT in
    f)  FORCE_CONVERT=1
        ;;
    P)  NUM_PARALLEL=$OPTARG
        ;;
  esac
done
shift  $(($OPTIND - 1))


cd /work

# ファイルのダウンロード
now=`date "+%Y%m%d-%H%M%S"`
echo "Started wget at $now"
wget -N https://ftp.ncbi.nlm.nih.gov/pub/lu/PubTator3/disease2pubtator3.gz 2> /wget_disease.log
wget -N https://ftp.ncbi.nlm.nih.gov/pub/lu/PubTator3/gene2pubtator3.gz 2> /wget_gene.log
wget -N https://ftp.ncbi.nlm.nih.gov/pub/lu/PubTator3/mutation2pubtator3.gz 2> /wget_mutation.log
now=`date "+%Y%m%d-%H%M%S"`
echo "Finished wget at $now"

# ダウンロードログの出力
cat /wget_disease.log /wget_gene.log /wget_mutation.log > /dev/stdout

num_of_newfiles_disease=`egrep " saved \[+[0-9]+/+[0-9]+\]" /wget_disease.log | grep -v "'.listing' saved" | wc -l `
num_of_newfiles_gene=`egrep " saved \[+[0-9]+/+[0-9]+\]" /wget_gene.log | grep -v "'.listing' saved" | wc -l `
num_of_newfiles_mutation=`egrep " saved \[+[0-9]+/+[0-9]+\]" /wget_mutation.log | grep -v "'.listing' saved" | wc -l `

# アーカイブファイルの権限設定
chmod 666 $(ls disease2pubtator3*) $(ls gene2pubtator3*) $(ls mutation2pubtator3*)

# アーカイブファイルに更新がなく,-fオプションの指定がない場合RDF変換を行わずに終了する
if [ $num_of_newfiles_disease -eq 0 ] && [ $num_of_newfiles_gene -eq 0 ] && [ $num_of_newfiles_mutation -eq 0 ] && [ $FORCE_CONVERT -eq 0 ]; then
  echo
  echo "No RDF files were generated because no new files were found at the download site."
  exit 0
fi

# アーカイブファイルの解凍
gzip -dc mutation2pubtator3.gz > mutation2pubtator3

now=`date "+%Y%m%d-%H%M%S"`
echo "Started convert at $now"

# コンバータの仕様に合わせて1000万行毎のファイルに分割してからRDF変換を行う
zcat ./disease2pubtator3.gz | perl /conv_ptc.pl | sort -S 4G --compress=gzip --parallel=$NUM_PARALLEL | uniq | split -$STEP --filter='gzip -c > $FILE.gz' - disease2pubtator3-
ls disease2pubtator3-*.gz | cat -n | awk "{print (\$1-1)*$STEP,\$2}" | xargs -P$NUM_PARALLEL -IIN sh -c "OUT=\$(echo IN | cut -f2 -d' ' | sed 's/gz/ttl/'); python /RDFizing_disease2pubtator.py -s IN | gzip -c > /data/\${OUT}.gz"

zcat ./gene2pubtator3.gz | perl /conv_ptc.pl | sort -S 4G --compress=gzip --parallel=$NUM_PARALLEL | uniq | split -$STEP --filter='gzip -c > $FILE.gz' - gene2pubtator3-
ls gene2pubtator3-*.gz | cat -n | awk "{print (\$1-1)*$STEP,\$2}" | xargs -P$NUM_PARALLEL -IIN sh -c "OUT=\$(echo IN | cut -f2 -d' ' | sed 's/gz/ttl/'); python /RDFizing_gene2pubtator.py -s IN | gzip -c > /data/\${OUT}.gz"

python /RDFizing_mutation2pubtator.py ./mutation2pubtator3 /data/mutation2pubtator3.ttl

now=`date "+%Y%m%d-%H%M%S"`
echo "Finished convert at $now"

chmod 666 $(ls disease2pubtator3*) $(ls gene2pubtator3*) $(ls mutation2pubtator3*)
rm -f disease2pubtator3 gene2pubtator3 mutation2pubtator3 $(ls disease2pubtator3-*) $(ls gene2pubtator3-*)
cd /data && chmod 666 $(ls disease2pubtator3*.ttl.gz) $(ls gene2pubtator3*.ttl.gz) $(ls mutation2pubtator3*.ttl)
